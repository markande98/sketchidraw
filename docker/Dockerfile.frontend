# Base image with common dependencies
FROM node:20-alpine AS base
RUN apk update && apk add --no-cache libc6-compat
RUN npm install -g pnpm turbo

# Builder stage - prune the monorepo
FROM base AS builder
WORKDIR /app
COPY . .
RUN npx turbo prune --scope=sketchidraw --docker

# Installer stage - install dependencies and build
FROM base AS installer
WORKDIR /app

# Install dependencies first (better caching)
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
RUN pnpm install --frozen-lockfile

# Copy source code and build
COPY --from=builder /app/out/full/ .

# Set build-time environment variables
ENV DATABASE_URL="postgresql://dummy:dummy@localhost:5432/dummy"

# Generate Prisma client and run migrations
RUN cd packages/db && pnpm run db:generate

# Build the application
RUN pnpm run build

# Production runner stage
FROM base AS runner
WORKDIR /app

# Create non-root user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=installer --chown=nextjs:nodejs /app ./

# Switch to non-root user
USER nextjs

EXPOSE 3000

# Set production environment
ENV NODE_ENV=production

CMD ["sh", "-c", "cd apps/sketchidraw && pnpm start"]